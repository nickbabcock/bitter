name: ci
on:
  pull_request:
  push:
    branches:
    - master
  schedule:
  - cron: '00 01 * * *'

jobs:
  test:
    name: test
    env:
      # For some builds, we use cross to test on 32-bit and big-endian
      # systems.
      CARGO: cargo
      # When CARGO is set to CROSS, TARGET is set to `--target matrix.target`.
      TARGET:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        build:
        - pinned
        - stable
        - stable-32
        - big-endian
        - beta
        - nightly
        - macos
        - win-msvc
        - win-gnu
        include:
        - build: pinned
          os: ubuntu-latest
          rust: 1.51.0
        - build: stable
          os: ubuntu-latest
          rust: stable
        - build: stable-32
          os: ubuntu-latest
          rust: stable
          target: i686-unknown-linux-gnu
        - build: big-endian
          os: ubuntu-latest
          rust: stable
          target: powerpc64-unknown-linux-gnu
        - build: beta
          os: ubuntu-latest
          rust: beta
        - build: nightly
          os: ubuntu-latest
          rust: nightly
        - build: macos
          os: macos-latest
          rust: stable
        - build: win-msvc
          os: windows-latest
          rust: stable
        - build: win-gnu
          os: windows-latest
          rust: stable-x86_64-gnu
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}

    - name: Use Cross
      if: matrix.target != ''
      run: |
        cargo install cross
        echo "CARGO=cross" >> $GITHUB_ENV
        echo "TARGET=--target ${{ matrix.target }}" >> $GITHUB_ENV

    - name: Build
      run: ${{ env.CARGO }} build --verbose $TARGET

    - name: Build docs
      run: ${{ env.CARGO }} doc --verbose $TARGET

    - name: No Std Tests
      if: matrix.build != 'pinned'
      run: ${{ env.CARGO }} test --no-default-features --verbose $TARGET

    - name: Tests
      if: matrix.build != 'pinned'
      run: ${{ env.CARGO }} test --verbose $TARGET

    - name: No panic tests
      if: matrix.build != 'pinned'
      run: ${{ env.CARGO }} build --release --verbose $TARGET --example sample

    - name: Compile benchmarks
      if: matrix.build == 'stable'
      run: cargo bench --verbose --no-run $TARGET

    - name: Run miri
      if: matrix.build == 'nightly'
      run: |
        rustup toolchain install nightly --component miri
        cargo miri setup
        MIRIFLAGS="-Zmiri-tree-borrows" cargo miri test

    - name: Compile fuzz
      if: matrix.build == 'nightly'
      run: |
        cargo install cargo-fuzz
        cargo fuzz build fuzz_simple

